{"ast":null,"code":"var http = require('http'); // Import Node.js core module\n\n\nvar GreensKiosk = require('./Greenskiosk');\n\nvar server = http.createServer(function (req, res) {\n  // create web server\n  // Set CORS headers\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Request-Method', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\n  res.setHeader('Access-Control-Allow-Headers', '*');\n\n  if (req.method === 'OPTIONS') {\n    res.writeHead(200);\n    res.end();\n    return;\n  }\n\n  if (req.url === '/') {\n    // check the URL of the current request\n    // set response header\n    res.writeHead(200, {\n      'Content-Type': 'text/html'\n    }); // set response content\n\n    res.write('<html><body><p>Greens Kiosk API.</p></body></html>');\n    res.end();\n  } else if (req.url === \"/products\") {\n    // check the URL of the current request\n    res.writeHead(200, {\n      'Content-Type': 'application/json'\n    });\n    res.write(JSON.stringify(GreensKiosk.getItems()));\n    res.end();\n  } else if (req.url === \"/products/fruits\") {\n    res.writeHead(200, {\n      'Content-Type': 'application/json'\n    });\n    res.write(JSON.stringify(GreensKiosk.getItems('fruits')));\n    res.end();\n  } else if (req.url === '/products/vegetables') {\n    res.writeHead(200, {\n      'Content-Type': 'application/json'\n    });\n    res.write(JSON.stringify(GreensKiosk.getItems('vegetables')));\n    res.end();\n  } else res.end('Invalid Request!');\n});\nserver.listen(5000); // listen for any incoming requests\n\nconsole.log('Node.js web server at port 5000 is running..');","map":{"version":3,"names":["http","require","GreensKiosk","server","createServer","req","res","setHeader","method","writeHead","end","url","write","JSON","stringify","getItems","listen","console","log"],"sources":["/home/user/Documents/greens-kiosk/src/Server.js"],"sourcesContent":["\n    var http = require('http'); // Import Node.js core module\n    var GreensKiosk = require('./Greenskiosk');\n    \n    var server = http.createServer(function (req, res) {   // create web server\n    \n      // Set CORS headers\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Request-Method', '*');\n      res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\n      res.setHeader('Access-Control-Allow-Headers', '*');\n      if (req.method === 'OPTIONS') {\n        res.writeHead(200);\n        res.end();\n        return;\n      }\n    \n      if (req.url === '/') { // check the URL of the current request\n        // set response header\n        res.writeHead(200, { 'Content-Type': 'text/html' });\n        // set response content\n        res.write('<html><body><p>Greens Kiosk API.</p></body></html>');\n        res.end();\n      }\n      else if (req.url === \"/products\") { // check the URL of the current request\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify(GreensKiosk.getItems()));\n        res.end();\n      }\n      else if (req.url === \"/products/fruits\") {\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify(GreensKiosk.getItems('fruits')));\n        res.end();\n      }\n      else if (req.url === '/products/vegetables') {\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify(GreensKiosk.getItems('vegetables')));\n        res.end();\n      }\n      else\n        res.end('Invalid Request!');\n    \n    });\n    \n    server.listen(5000); // listen for any incoming requests\n    \n    console.log('Node.js web server at port 5000 is running..')\n\n"],"mappings":"AACI,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,C,CAA4B;;;AAC5B,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,MAAM,GAAGH,IAAI,CAACI,YAAL,CAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;EAAI;EAErD;EACAA,GAAG,CAACC,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;EACAD,GAAG,CAACC,SAAJ,CAAc,+BAAd,EAA+C,GAA/C;EACAD,GAAG,CAACC,SAAJ,CAAc,8BAAd,EAA8C,cAA9C;EACAD,GAAG,CAACC,SAAJ,CAAc,8BAAd,EAA8C,GAA9C;;EACA,IAAIF,GAAG,CAACG,MAAJ,KAAe,SAAnB,EAA8B;IAC5BF,GAAG,CAACG,SAAJ,CAAc,GAAd;IACAH,GAAG,CAACI,GAAJ;IACA;EACD;;EAED,IAAIL,GAAG,CAACM,GAAJ,KAAY,GAAhB,EAAqB;IAAE;IACrB;IACAL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;MAAE,gBAAgB;IAAlB,CAAnB,EAFmB,CAGnB;;IACAH,GAAG,CAACM,KAAJ,CAAU,oDAAV;IACAN,GAAG,CAACI,GAAJ;EACD,CAND,MAOK,IAAIL,GAAG,CAACM,GAAJ,KAAY,WAAhB,EAA6B;IAAE;IAClCL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;MAAE,gBAAgB;IAAlB,CAAnB;IACAH,GAAG,CAACM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeZ,WAAW,CAACa,QAAZ,EAAf,CAAV;IACAT,GAAG,CAACI,GAAJ;EACD,CAJI,MAKA,IAAIL,GAAG,CAACM,GAAJ,KAAY,kBAAhB,EAAoC;IACvCL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;MAAE,gBAAgB;IAAlB,CAAnB;IACAH,GAAG,CAACM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeZ,WAAW,CAACa,QAAZ,CAAqB,QAArB,CAAf,CAAV;IACAT,GAAG,CAACI,GAAJ;EACD,CAJI,MAKA,IAAIL,GAAG,CAACM,GAAJ,KAAY,sBAAhB,EAAwC;IAC3CL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;MAAE,gBAAgB;IAAlB,CAAnB;IACAH,GAAG,CAACM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeZ,WAAW,CAACa,QAAZ,CAAqB,YAArB,CAAf,CAAV;IACAT,GAAG,CAACI,GAAJ;EACD,CAJI,MAMHJ,GAAG,CAACI,GAAJ,CAAQ,kBAAR;AAEH,CAtCY,CAAb;AAwCAP,MAAM,CAACa,MAAP,CAAc,IAAd,E,CAAqB;;AAErBC,OAAO,CAACC,GAAR,CAAY,8CAAZ"},"metadata":{},"sourceType":"module"}