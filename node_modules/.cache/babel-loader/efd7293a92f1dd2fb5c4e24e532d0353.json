{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/greens-kiosk/src/Server.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Server = () => {\n  var http = require('http'); // Import Node.js core module\n\n\n  var GreensKiosk = require('./GreensKiosk');\n\n  var server = http.createServer(function (req, res) {\n    // create web server\n    // Set CORS headers\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Request-Method', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\n    res.setHeader('Access-Control-Allow-Headers', '*');\n\n    if (req.method === 'OPTIONS') {\n      res.writeHead(200);\n      res.end();\n      return;\n    }\n\n    if (req.url === '/') {\n      // check the URL of the current request\n      // set response header\n      res.writeHead(200, {\n        'Content-Type': 'text/html'\n      }); // set response content\n\n      res.write('<html><body><p>Greens Kiosk API.</p></body></html>');\n      res.end();\n    } else if (req.url === \"/products\") {\n      // check the URL of the current request\n      res.writeHead(200, {\n        'Content-Type': 'application/json'\n      });\n      res.write(JSON.stringify(GreensKiosk.getItems()));\n      res.end();\n    } else if (req.url === \"/products/fruits\") {\n      res.writeHead(200, {\n        'Content-Type': 'application/json'\n      });\n      res.write(JSON.stringify(GreensKiosk.getItems('fruits')));\n      res.end();\n    } else if (req.url === '/products/vegetables') {\n      res.writeHead(200, {\n        'Content-Type': 'application/json'\n      });\n      res.write(JSON.stringify(GreensKiosk.getItems('vegetables')));\n      res.end();\n    } else res.end('Invalid Request!');\n  });\n  server.listen(3000); // listen for any incoming requests\n\n  console.log('Node.js web server at port 5000 is running..');\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Server;\nexport default Server;\n\nvar _c;\n\n$RefreshReg$(_c, \"Server\");","map":{"version":3,"names":["React","Server","http","require","GreensKiosk","server","createServer","req","res","setHeader","method","writeHead","end","url","write","JSON","stringify","getItems","listen","console","log"],"sources":["/home/user/Documents/greens-kiosk/src/Server.js"],"sourcesContent":["import React from \"react\";\n\nconst Server = () =>{\n    var http = require('http'); // Import Node.js core module\n    var GreensKiosk = require('./GreensKiosk');\n    \n    var server = http.createServer(function (req, res) {   // create web server\n    \n      // Set CORS headers\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Request-Method', '*');\n      res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\n      res.setHeader('Access-Control-Allow-Headers', '*');\n      if (req.method === 'OPTIONS') {\n        res.writeHead(200);\n        res.end();\n        return;\n      }\n    \n      if (req.url === '/') { // check the URL of the current request\n        // set response header\n        res.writeHead(200, { 'Content-Type': 'text/html' });\n        // set response content\n        res.write('<html><body><p>Greens Kiosk API.</p></body></html>');\n        res.end();\n      }\n      else if (req.url === \"/products\") { // check the URL of the current request\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify(GreensKiosk.getItems()));\n        res.end();\n      }\n      else if (req.url === \"/products/fruits\") {\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify(GreensKiosk.getItems('fruits')));\n        res.end();\n      }\n      else if (req.url === '/products/vegetables') {\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify(GreensKiosk.getItems('vegetables')));\n        res.end();\n      }\n      else\n        res.end('Invalid Request!');\n    \n    });\n    \n    server.listen(3000); // listen for any incoming requests\n    \n    console.log('Node.js web server at port 5000 is running..')\n\n\n    return(\n        <div>\n           {} \n        </div>\n    )\n\n\n};\n\nexport default Server"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAK;EAChB,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,CADgB,CACY;;;EAC5B,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;EAEA,IAAIE,MAAM,GAAGH,IAAI,CAACI,YAAL,CAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;IAAI;IAErD;IACAA,GAAG,CAACC,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;IACAD,GAAG,CAACC,SAAJ,CAAc,+BAAd,EAA+C,GAA/C;IACAD,GAAG,CAACC,SAAJ,CAAc,8BAAd,EAA8C,cAA9C;IACAD,GAAG,CAACC,SAAJ,CAAc,8BAAd,EAA8C,GAA9C;;IACA,IAAIF,GAAG,CAACG,MAAJ,KAAe,SAAnB,EAA8B;MAC5BF,GAAG,CAACG,SAAJ,CAAc,GAAd;MACAH,GAAG,CAACI,GAAJ;MACA;IACD;;IAED,IAAIL,GAAG,CAACM,GAAJ,KAAY,GAAhB,EAAqB;MAAE;MACrB;MACAL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;QAAE,gBAAgB;MAAlB,CAAnB,EAFmB,CAGnB;;MACAH,GAAG,CAACM,KAAJ,CAAU,oDAAV;MACAN,GAAG,CAACI,GAAJ;IACD,CAND,MAOK,IAAIL,GAAG,CAACM,GAAJ,KAAY,WAAhB,EAA6B;MAAE;MAClCL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;QAAE,gBAAgB;MAAlB,CAAnB;MACAH,GAAG,CAACM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeZ,WAAW,CAACa,QAAZ,EAAf,CAAV;MACAT,GAAG,CAACI,GAAJ;IACD,CAJI,MAKA,IAAIL,GAAG,CAACM,GAAJ,KAAY,kBAAhB,EAAoC;MACvCL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;QAAE,gBAAgB;MAAlB,CAAnB;MACAH,GAAG,CAACM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeZ,WAAW,CAACa,QAAZ,CAAqB,QAArB,CAAf,CAAV;MACAT,GAAG,CAACI,GAAJ;IACD,CAJI,MAKA,IAAIL,GAAG,CAACM,GAAJ,KAAY,sBAAhB,EAAwC;MAC3CL,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;QAAE,gBAAgB;MAAlB,CAAnB;MACAH,GAAG,CAACM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeZ,WAAW,CAACa,QAAZ,CAAqB,YAArB,CAAf,CAAV;MACAT,GAAG,CAACI,GAAJ;IACD,CAJI,MAMHJ,GAAG,CAACI,GAAJ,CAAQ,kBAAR;EAEH,CAtCY,CAAb;EAwCAP,MAAM,CAACa,MAAP,CAAc,IAAd,EA5CgB,CA4CK;;EAErBC,OAAO,CAACC,GAAR,CAAY,8CAAZ;EAGA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAxDD;;KAAMnB,M;AA0DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}